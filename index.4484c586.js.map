{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-7e9ff0f78ed88bc7.js","src/js/custom-components.js","src/js/api.js","src/js/create-gallery-markup.js","src/js/refs.js","node_modules/@parcel/runtime-js/lib/runtime-643dfc921be0cb37.js","src/js/pagination.js","src/js/rendering-movie-cards.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.4484c586.js\\\",\\\"lp5u4\\\":\\\"sprite.34e24702.svg\\\"}\"));","//-----------------------------HORYZONTAL-INDICATOR-----------------------------//\n\nwindow.onscroll = function () { myFunction() };\n\nfunction myFunction() {\n    var winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n    var height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n    var scrolled = (winScroll / height) * 100;\n    document.getElementById(\"myBar\").style.width = scrolled + \"%\";\n}\n\n//-----------------------------HORYZONTAL-INDICATOR-----------------------------//","let page;\nlet query;\n\n//основа для запиту\nconst BASE_URL = 'https://api.themoviedb.org/3';\n//персональний ключ\nconst API_KEY = 'db5c04dbd9637821020050cea594d5e0';\n// const WATCH_KEY = 'watched';\n// const QUEUE_KEY = 'queue';\n\n//запит на отримання популярних фільмів\nasync function fetchPopularMovies(page) {\n  const url = new URL(`${BASE_URL}/trending/movie/week`);\n  url.searchParams.append('api_key', API_KEY);\n  url.searchParams.append('page', page);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  console.log(data);\n  return data;\n}\n// `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=${page}&adult=false`;\nconsole.log(fetchPopularMovies(3));\n\n//запит на отримання фільмів по запиту\nasync function fetchMoviesByQuery(query, page) {\n  const url = new URL(`${BASE_URL}/search/movie`);\n  url.searchParams.append('api_key', API_KEY);\n  url.searchParams.append('query', query);\n  url.searchParams.append('page', page);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n// `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&adult=false&query=${query}`;\n// console.log(fetchMoviesByQuery('avengers', 1));\n\n//запит на отримання фільму по id\nasync function fetchMovieById(id) {\n  const url = new URL(`${BASE_URL}/movie/${id}`);\n  url.searchParams.append('api_key', API_KEY);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n// `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n// console.log(fetchMovieById(299534));\n\n//запит на отримання трейлера по id\nasync function fetchTrailerById(id) {\n  const url = new URL(`${BASE_URL}/movie/${id}/videos`);\n  url.searchParams.append('api_key', API_KEY);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n// `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}`;\n// console.log(fetchTrailerById(299534));\n\n//запит на отримання жанрів\nasync function fetchGenres() {\n  const url = new URL(`${BASE_URL}/genre/movie/list`);\n  url.searchParams.append('api_key', API_KEY);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.genres;\n}\n\n// `${BASE_URL}/genre/movie/list?api_key=${API_KEY}`;\n// console.log(fetchGenres());\n\n//Експорт запитів\nexport {\n  fetchPopularMovies,\n  fetchMoviesByQuery,\n  fetchMovieById,\n  fetchTrailerById,\n  fetchGenres,\n  BASE_URL,\n  API_KEY,\n};\n\n// РЕКОМЕНДАЦІЇ\n// 1. Імпортувати axios.\n// 2. Зберегти в змінних ключ та URL.\n// 3. Створити та експортувати асинхронні запити по:\n// трендах, ключовому слові, інфо фільму, інфо відео, масив фільмів.\n","// РЕКОМЕНДАЦІЇ\n// 1. Створити та експортувати функцію яка перебирає фільми та повертає розмітку.\n\n// ТУТ ПРАЦЮЄ ОЛЕКСАНДР ХИМЕНКО\n\nimport { fetchGenres } from './api';\nimport { fetchPopularMovies } from './api';\n\nconst NO_POSTER = `https://i.ibb.co/r76r6Vt/oie-30214851-Ms-Wl-PTS0.png`;\n\nexport function getGenres(arrayId, genres) {\n  const arr = [];\n  for (const value of genres) {\n    if (arrayId.includes(value.id)) {\n      arr.push(value.name);\n    }\n  }\n  if (arrayId.length > 2) {\n    arr.splice(2, arr.length - 2, 'Other');\n  }\n\n  return arr.join(', ');\n}\n\nexport async function renderGallery(movies) {\n  const genres = await fetchGenres();\n  return movies\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        release_date,\n        genre_ids,\n        original_title,\n        vote_average,\n      } = movies) => {\n        const poster = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : NO_POSTER;\n        const releaseYear = release_date\n          ? release_date.split('-')[0]\n          : 'Unknown';\n        const checkGenres = genre_ids\n          ? getGenres(genre_ids, genres)\n          : 'Unknown';\n        return `\n      <li class='movie_list_item' data-id=\"${id}>\n      <a href=\"\" class='movie_list_link link' id=${id}>\n      <div class=\"movie__cover--darkened\"></div>\n        <img class=\"movie_list_image\" src=${poster} alt='Poster ${original_title}' loading='lazy' />\n        <div class='movie-info'>\n            <p class='movie-title'>\n              <b>${title.toUpperCase()}</b>\n            </p>\n            <p class='movie-date'>\n              <span>${checkGenres} | ${releaseYear}</span>\n            </p>\n            <div class=\"movie__average movie__average--${getClassByRate(\n              vote_average\n            )}\">${vote_average.toFixed(1)}</div>\n        </div>\n        </a>\n      </li>\n      `;\n      }\n    )\n    .join('');\n}\n\n// fetchPopularMovies(2)\n//   .then(res => {\n//     const obj = res.results;\n//     return renderGallery(obj);\n//   })\n//   .then(res => {\n//     moviesEl.insertAdjacentHTML('beforeend', res);\n//   });\n\nexport function getClassByRate(vote) {\n  if (vote >= 8) {\n    return 'green';\n  } else if (vote > 6) {\n    return 'orange';\n  } else {\n    return 'red';\n  }\n}\n","// РЕКОМЕНДАЦІЇ\n// 1. Створити константу refs з DOM елементами.\n// 2. Експортувати константу refs.\n\nfoterLink: document.querySelector('.footer__link');\nexport const refs = {\n  pagination: document.querySelector('.pagination'),\n};\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lp5u4\")).toString();","import { fetchPopularMovies } from './api';\nimport { renderGallery } from './create-gallery-markup';\nimport { refs } from './refs';\nimport { moviesEl } from './rendering-movie-cards';\n\nexport const state = {\n  currentPage: 1,\n  totalPages: 0,\n  sprite: new URL('../images/sprite.svg', import.meta.url),\n};\nconst { pagination } = refs;\n\nconst clearHTML = () => {\n  pagination.innerHTML = '';\n};\nconst paginate = (totalPages, currentPage) => {\n  const groupSize = 5;\n  const numGroups = Math.ceil(totalPages / groupSize);\n  const currentGroup = Math.ceil(currentPage / groupSize);\n  const startPage = (currentGroup - 1) * groupSize + 1;\n  const endPage = Math.min(startPage + groupSize - 1, totalPages);\n\n  const pages = Array.from(\n    { length: endPage - startPage + 1 },\n    (_, i) => startPage + i\n  );\n\n  const hasPrevGroup = currentGroup > 1;\n  const hasNextGroup = currentGroup < numGroups;\n  return {\n    pages,\n    hasPrevGroup,\n    hasNextGroup,\n  };\n};\nconst paginationMarkup = () => {\n  const { pages, hasPrevGroup, hasNextGroup } = paginate(\n    state.totalPages,\n    state.currentPage\n  );\n  const firstPage = `<button type=\"button\" class=\"start-btn page-btn\">1</button>`;\n  const lastPage = `<button type=\"button\" class=\"end-btn page-btn\">${state.totalPages}</button>`;\n  const prev = `<button type=\"button\" class=\"prev-btn page-btn\"><svg class=\"icon icon-arrow-left\">\n    <use xlink:href=\"${state.sprite}#icon-arrow-left\"></use>\n  </svg></button>`;\n  const next = `<button type=\"button\" class=\"next-btn page-btn\"><svg class=\"icon icon-arrow-right\">\n    <use xlink:href=\"${state.sprite}#icon-arrow-right\"></use>\n  </svg></button>`;\n  const dotsBtnPrev = `<button class=\"page-btn prev-dots\">...</button>`;\n  const dotsBtnNext = `<button class=\"page-btn next-dots\">...</button>`;\n  const btnPages = pages\n    .map(num => {\n      const isActive = num === state.currentPage ? 'active-page' : '';\n      return `<button type=\"button\" class=\"page-btn ${isActive}\n        \">${num}</button>`;\n    })\n    .join('');\n\n  const leftGroup = hasPrevGroup ? prev + firstPage + dotsBtnPrev : '';\n  const rightGroup = hasNextGroup ? dotsBtnNext + lastPage + next : '';\n  return leftGroup + btnPages + rightGroup;\n};\n\nexport const renderPaginationMarkup = () => {\n  pagination.insertAdjacentHTML('beforeend', paginationMarkup());\n};\n\nconst updateCurrentPage = newPage => {\n  state.currentPage = newPage;\n  clearHTML();\n  renderPaginationMarkup(paginationMarkup());\n};\n\nconst goToNextPage = () => {\n  updateCurrentPage(state.currentPage + 1);\n};\nconst goToPrevPage = () => {\n  updateCurrentPage(state.currentPage - 1);\n};\nconst goToNextGroupBtn = () => {\n  const { pages } = paginate(state.totalPages, state.currentPage);\n  const lastPageOfCurrentGroup = pages[pages.length - 1];\n  const newPage = Math.min(lastPageOfCurrentGroup + 1, state.totalPages);\n  state.currentPage = pages[pages.length - 1] + 1;\n  updateCurrentPage(newPage);\n};\nconst goToPrevGroupBtn = () => {\n  const { pages } = paginate(state.totalPages, state.currentPage);\n  const firstPageOfCurrentGroup = pages[0];\n  const newPage = Math.max(firstPageOfCurrentGroup - 1, 1);\n  updateCurrentPage(newPage);\n};\nconst changePageByClick = evt => {\n  const activeBtn = document.querySelector('.active-page');\n  const selectedPage = Number(evt.target.textContent) || state.currentPage;\n  if (selectedPage === state.currentPage) return;\n\n  updateCurrentPage(selectedPage);\n  activeBtn.classList.remove('active-page');\n  evt.target.classList.add('active-page');\n};\n\nexport const onBtnPageClick = async evt => {\n  if (evt.target.nodeName !== 'BUTTON') return;\n  if (Number(evt.target.textContent) === state.currentPage) return;\n  if (evt.target.classList.contains('next-btn')) goToNextPage();\n  if (evt.target.classList.contains('prev-btn')) goToPrevPage();\n  if (evt.target.classList.contains('next-dots')) goToNextGroupBtn();\n  if (evt.target.classList.contains('prev-dots')) goToPrevGroupBtn();\n\n  moviesEl.innerHTML = '';\n  // loader\n  changePageByClick(evt);\n  try {\n    const { results } = await fetchPopularMovies(state.currentPage);\n    const markupGallery = await renderGallery(results);\n    moviesEl.insertAdjacentHTML('beforeend', markupGallery);\n  } catch (error) {\n    console.error(error.message);\n  } finally {\n    // loader\n  }\n};\n","// РЕКОМЕНДАЦІЇ\n// 1. Отримувати дані про трендові фільми.\n\n// ТУТ ПРАЦЮЄ ОЛЕКСАНДР ГАЙДУК\n\nimport { fetchPopularMovies } from './api';\nimport { renderGallery } from './create-gallery-markup';\nimport { renderPaginationMarkup, state } from './pagination';\nexport const moviesEl = document.querySelector('.movies');\nstate.currentPage = 1;\n\nfetchPopularMovies(state.currentPage)\n  .then(res => {\n    const { results, total_pages } = res;\n    state.totalPages = total_pages;\n    if (state.totalPages > 1) {\n      renderPaginationMarkup();\n    }\n\n    return renderGallery(results);\n  })\n  .then(res => {\n    moviesEl.insertAdjacentHTML('beforeend', res);\n  });\n","// Тут будуть імпортуватись:\n// 1. Рендер карток фільму.\n// 2. Пошук по ключовому слову.\n// 3. Відкирття та закриття модалки.\n// 4. Модалка учасників команди.\n\n// import './js/api';\nimport './js/trailer';\nimport * as customComponent from './js/custom-components';\nimport * as renderingMovieCards from './js/rendering-movie-cards';\nimport * as searchByKeyword from './js/search-by-keyword';\nimport * as openModal from './js/open-and-close-modal';\nimport * as teamModal from './js/team-load-to-modal';\nimport * as galleryMarkup from './js/create-gallery-markup';\nimport { refs } from './js/refs';\nimport { onBtnPageClick } from './js/pagination';\n\nrefs.pagination.addEventListener('click', onBtnPageClick);\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","window","onscroll","winScroll","height","scrolled","document","body","scrollTop","documentElement","scrollHeight","clientHeight","getElementById","style","width","async","$56ca17bb174b0ce3$export$225b489b0d997c20","page1","url","URL","searchParams","append","response","fetch","data","json","console","log","$56ca17bb174b0ce3$export$e95d448b93b2cdb","genres","$ff4f21f9e88c18ff$export$30b0ee8bdb5cac31","movies","map","poster_path","title","release_date","genre_ids","original_title","vote_average","poster","releaseYear","split","checkGenres","arrayId","arr","value","includes","push","name","splice","join","$ff4f21f9e88c18ff$export$c5604fa8028da00","toUpperCase","vote","toFixed","querySelector","$ee27a4d7c64fc8c4$export$21666b427502ea6d","pagination","$a4212a039eccdb43$exports","resolve","import","meta","toString","$1bab9c519cfa82bc$export$ca000e230c0caa3e","currentPage","totalPages","sprite","$1bab9c519cfa82bc$var$pagination","$1bab9c519cfa82bc$var$paginate","numGroups","Math","ceil","currentGroup","startPage","endPage","min","Array","from","_","$1bab9c519cfa82bc$var$paginationMarkup","pages","hasPrevGroup","hasNextGroup","lastPage","prev","next","num","$1bab9c519cfa82bc$export$c1930e35444d24ce","insertAdjacentHTML","$1bab9c519cfa82bc$var$updateCurrentPage","newPage","innerHTML","$3abaa1e6bf88e2fd$export$d5e1f30add85e8c4","then","res","results","total_pages","addEventListener","evt","target","nodeName","Number","textContent","classList","contains","lastPageOfCurrentGroup","$1bab9c519cfa82bc$var$goToNextGroupBtn","firstPageOfCurrentGroup","max","$1bab9c519cfa82bc$var$goToPrevGroupBtn","activeBtn","selectedPage","remove","add","$1bab9c519cfa82bc$var$changePageByClick","markupGallery","error","message"],"version":3,"file":"index.4484c586.js.map"}