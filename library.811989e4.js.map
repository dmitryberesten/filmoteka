{"mappings":"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","sources":["src/js/api.js","src/js/loading-into-modal.js","src/js/local-storage.js","src/js/refs.js","src/js/state.js","src/js/open-and-close-modal.js"],"sourcesContent":["let page;\nlet query;\n\n//основа для запиту\nconst BASE_URL = 'https://api.themoviedb.org/3';\n//персональний ключ\nconst API_KEY = 'db5c04dbd9637821020050cea594d5e0';\n// const WATCH_KEY = 'watched';\n// const QUEUE_KEY = 'queue';\n\n//запит на отримання популярних фільмів\nasync function fetchPopularMovies(page) {\n  const url = new URL(`${BASE_URL}/trending/movie/week`);\n  url.searchParams.append('api_key', API_KEY);\n  url.searchParams.append('page', page);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\nasync function fetchTodayPopularMovies() {\n  const url = new URL(`${BASE_URL}/trending/movie/day`);\n  url.searchParams.append('api_key', API_KEY);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n// `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=${page}&adult=false`;\nconsole.log(fetchPopularMovies(3));\n\n//запит на отримання фільмів по запиту\nasync function fetchMoviesByQuery(query, page) {\n  const url = new URL(`${BASE_URL}/search/movie`);\n  url.searchParams.append('api_key', API_KEY);\n  url.searchParams.append('query', query);\n  url.searchParams.append('page', page);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n// `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&adult=false&query=${query}`;\n// console.log(fetchMoviesByQuery('avengers', 1));\n\n//запит на отримання фільму по id\nasync function fetchMovieById(id) {\n  const url = new URL(`${BASE_URL}/movie/${id}`);\n  url.searchParams.append('api_key', API_KEY);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n// `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n// console.log(fetchMovieById(299534));\n\n//запит на отримання трейлера по id\nasync function fetchTrailerById(id) {\n  const url = new URL(`${BASE_URL}/movie/${id}/videos`);\n  url.searchParams.append('api_key', API_KEY);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n// `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}`;\n// console.log(fetchTrailerById(299534));\n\n//запит на отримання жанрів\nasync function fetchGenres() {\n  const url = new URL(`${BASE_URL}/genre/movie/list`);\n  url.searchParams.append('api_key', API_KEY);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.genres;\n}\n\n// `${BASE_URL}/genre/movie/list?api_key=${API_KEY}`;\n// console.log(fetchGenres());\n\n//Експорт запитів\nexport {\n  fetchPopularMovies,\n  fetchTodayPopularMovies,\n  fetchMoviesByQuery,\n  fetchMovieById,\n  fetchTrailerById,\n  fetchGenres,\n  BASE_URL,\n  API_KEY,\n};\n\n// РЕКОМЕНДАЦІЇ\n// 1. Імпортувати axios.\n// 2. Зберегти в змінних ключ та URL.\n// 3. Створити та експортувати асинхронні запити по:\n// трендах, ключовому слові, інфо фільму, інфо відео, масив фільмів.\n","const averageElement = document.createElement('span');\nconst countElement = document.createElement('span');\nexport const getInitialModalData = () => {\n  const cardData = JSON.parse(localStorage.getItem('modalCardData'));\n\n  console.log('!!!!!! DATA !!!!!! ', cardData);\n\n  console.log('22222222 ', (cardData.vote_average * 1).toFixed(2));\n\n  const filmImg = document.getElementById('film-img');\n  const filmTitle = document.getElementById('film-title');\n  const votes = document.getElementById('votes');\n  const popul = document.getElementById('popul');\n  const origTitle = document.getElementById('origTitle');\n  const genre = document.getElementById('genre');\n\n  filmImg.src = `${cardData.poster_path}`;\n  filmTitle.innerText = `${cardData.title}`;\n  about.innerText = `${cardData.overview}`;\n  averageElement.className = 'average';\n  countElement.className = 'count';\n  averageElement.innerText = `${(cardData.vote_average * 1).toFixed(2)}`;\n  countElement.innerText = `/ ${cardData.vote_count}`;\n\n  votes.append(averageElement, countElement);\n\n  popul.innerText = `${cardData.popularity}`;\n  origTitle.innerText = `${cardData.original_title}`;\n  genre.innerText = `${cardData.genre_ids}`;\n};\n","// РЕКОМЕНДАЦІЇ\n// 1. Зберігати ключі в константах.\n// 2. Використовувати в назвах функцій ключові слова get, set.\n\nexport const setToLocalStorage = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    console.log(error.messege);\n  }\n};\nexport const getFromStorage = key => {\n  try {\n    const serialisedState = localStorage.getItem(key);\n    return serialisedState === null ? undefined : JSON.parse(serialisedState);\n  } catch (error) {\n    console.log(error.messege);\n  }\n};\n\nexport const localStorageKeys = {\n  WATCHED: 'watched',\n  QUEUE: 'queue',\n};\n","// РЕКОМЕНДАЦІЇ\n// 1. Створити константу refs з DOM елементами.\n// 2. Експортувати константу refs.\n\nfoterLink: document.querySelector('.footer__link');\nexport const refs = {\n  pagination: document.querySelector('.pagination'),\n  slider: document.querySelector('.swiper-wrapper'),\n  btnWrapper: document.querySelector('#buttonWrapper'),\n  addToWatchedBtn: document.querySelector('.add-to-watched-btn'),\n  addToQueueBtn: document.querySelector('.add-to-queue-btn'),\n};\n","export const state = {\n  currentPage: 1,\n  totalPages: 0,\n  activeFilm: null,\n  //   sprite: new URL('../img/sprite.svg', import.meta.url),\n};\n","import * as modalFunctions from './loading-into-modal';\nimport { getFromStorage, localStorageKeys } from './local-storage';\nimport { refs } from './refs';\nimport { state } from './state';\n\nconst modal = document.getElementById('info-modal');\n\nwindow.addEventListener('keydown', event => {\n  if (event.key === 'Escape') {\n    modal.classList.remove('open');\n    localStorage.removeItem('modalCardData');\n  }\n});\n\nconst backdrop = document.getElementById('close-modal');\n\nbackdrop.addEventListener('click', event => {\n  // console.log('111 event.target ', event.target);\n  // console.log('111 backdrop ', backdrop);\n  if (event.target == backdrop) {\n    // console.log('!!! ');\n    modal.classList.remove('open');\n    localStorage.removeItem('modalCardData');\n  }\n});\n\nwindow.onclick = event => {\n  let modal = document.getElementById('info-modal');\n\n  if (event.target == modal) {\n    modal.classList.remove('open');\n    localStorage.removeItem('modalCardData');\n  }\n};\n\nwindow.onload = () => {\n  const movieListItems = document.getElementsByClassName('movies')[0];\n  // console.log('movieListItems', movieListItems);\n  movieListItems.addEventListener('click', e => {\n    const cardData = { ...e.target.dataset };\n\n    ////buttons\n    state.activeFilm = cardData;\n    ////buttons\n\n    // console.log('bla ', cardData);\n    localStorage.setItem('modalCardData', JSON.stringify(cardData));\n    openModal();\n\n    //buttons\n    const watchedFilms = getFromStorage(localStorageKeys.WATCHED) || [];\n    const queueFilms = getFromStorage(localStorageKeys.QUEUE) || [];\n\n    if (watchedFilms.find(film => film.id === state.activeFilm.id)) {\n      refs.addToWatchedBtn.innerText = 'REMOVE FROM WATCHED';\n    } else {\n      refs.addToWatchedBtn.innerText = 'ADD TO WATCHED';\n    }\n    if (queueFilms.find(film => film.id === state.activeFilm.id)) {\n      refs.addToQueueBtn.innerText = 'REMOVE FROM QUEUE';\n    } else {\n      refs.addToQueueBtn.innerText = 'ADD TO QUEUE';\n    }\n    //buttons\n  });\n};\n\nconst openModal = () => {\n  const modal = document.getElementById('info-modal');\n  modal.classList.add('open');\n  modalFunctions.getInitialModalData();\n};\n"],"names":["console","log","async","page1","url","URL","searchParams","append","response","fetch","json","$56ca17bb174b0ce3$export$225b489b0d997c20","$464bbe8c76c3bd9a$var$averageElement","document","createElement","$464bbe8c76c3bd9a$var$countElement","$8125d1701b78b442$export$e4c9b9bae9539063","key","serialisedState","localStorage","getItem","undefined","JSON","parse","error","messege","$8125d1701b78b442$export$78ab1f300c618c27","WATCHED","QUEUE","querySelector","$ee27a4d7c64fc8c4$export$21666b427502ea6d","pagination","slider","btnWrapper","addToWatchedBtn","addToQueueBtn","$fd2d3348854bcc99$export$ca000e230c0caa3e","currentPage","totalPages","activeFilm","$021845d28981a6a0$var$modal","getElementById","window","addEventListener","event","classList","remove","removeItem","$021845d28981a6a0$var$backdrop","target","onclick","modal1","onload","getElementsByClassName","e","cardData","dataset","setItem","stringify","$021845d28981a6a0$var$openModal","watchedFilms","queueFilms","find","film","id","innerText","add","vote_average","toFixed","filmImg","filmTitle","votes","popul","origTitle","genre","src","poster_path","title","about","overview","className","vote_count","popularity","original_title","genre_ids","$464bbe8c76c3bd9a$export$f5460f092c589d73"],"version":3,"file":"library.811989e4.js.map"}