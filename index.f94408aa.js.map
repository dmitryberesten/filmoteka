{"mappings":"iiBAMAA,EAAA,S,WCJAC,OAAOC,SAAW,WAElB,IACQC,EACAC,EACAC,EAFAF,EAAYG,SAASC,KAAKC,WAAaF,SAASG,gBAAgBD,UAChEJ,EAASE,SAASG,gBAAgBC,aAAeJ,SAASG,gBAAgBE,aAC1EN,EAAWF,EAAaC,EAAU,IACtCE,SAASM,eAAe,SAASC,MAAMC,MAAQT,EAAW,G,wBCH9D,IAAAU,EAAAf,EAAA,S,0BAGMgB,G,aAAa,wDACbC,EAAWX,SAASY,cAAc,WAEjC,SAASC,EAAUC,EAASC,GACjC,IAAMC,EAAM,GACPC,GAAW,EAAXC,GAAW,EAAXC,OAAWC,E,IAAhB,QAAKC,EAAAC,EAAeP,EAAMQ,OAAAC,cAArBP,GAAAI,EAAAC,EAAWG,QAAAC,MAAXT,GAAW,GAAX,IAAMU,EAANN,EAAWM,MACVb,EAAQc,SAASD,EAAME,KACzBb,EAAIc,KAAKH,EAAMI,K,WAFdb,GAAW,EAAXC,EAAWa,C,aAAXf,GAAW,MAAXK,EAAWW,QAAXX,EAAWW,Q,YAAXf,E,MAAAC,C,EASL,OAJIL,EAAQoB,OAAS,GACnBlB,EAAImB,OAAO,EAAGnB,EAAIkB,OAAS,EAAG,SAGzBlB,EAAIoB,KAAK,K,UAGHC,I,OAAAA,EAAfC,EAAA7B,EAAA,CAAA6B,EAAAC,GAAAC,MAAA,SAAAC,EAA6BC,G,IACrB3B,E,mFAAe,EAAA4B,EAAAC,e,cAAf7B,EAAM8B,EAAAC,K,kBACLJ,EACJK,KACC,W,6DAQIL,EAPFb,EAAEmB,EAAFnB,GACAoB,EAAWD,EAAXC,YACAC,EAAKF,EAALE,MACAC,EAAYH,EAAZG,aACAC,EAASJ,EAATI,UACAC,EAAcL,EAAdK,eACAC,EAAYN,EAAZM,aAEMC,EAASN,EACX,kCAA8CO,OAAZP,GAClCvC,EACE+C,EAAcN,EAChBA,EAAaO,MAAM,KAAK,GACxB,UACEC,EAAcP,EAChBvC,EAAUuC,EAAWrC,GACrB,UACJ,MAAO,iDAEoCyC,OADN3B,EAAG,0DAEJ2B,OADO3B,EAAG,iDACY2B,OAAtBD,EAAO,iBAGhCC,OAH+CH,EAAe,iHAM3DG,OAHHN,EAAMU,cAAc,oFAGAJ,OAAjBG,EAAY,OAEQH,OAFHC,EAAY,uEAEeD,OAAxBF,EAAaO,QAAQ,GAAG,4D,IAO7DzB,KAAK,K,2CAxCKC,EAAayB,MAAAC,KAAAC,U,EA2C5B,EAAArB,EAAAsB,oBAAmB,GAChBC,MAAK,SAAAC,GAEJ,O,SA9CyBzB,G,OAAdL,EAAayB,MAAAC,KAAAC,U,CA8CjBI,CADKD,EAAIE,Q,IAGjBH,MAAK,SAAAC,GACJxD,EAAS2D,mBAAmB,YAAaH,E","sources":["src/index.js","src/js/custom-components.js","src/js/create-gallery-markup.js"],"sourcesContent":["// Тут будуть імпортуватись:\n// 1. Рендер карток фільму.\n// 2. Пошук по ключовому слову.\n// 3. Відкирття та закриття модалки.\n// 4. Модалка учасників команди.\n\nimport './js/api';\nimport './js/trailer';\nimport * as customComponent from './js/custom-components';\nimport * as renderingMovieCards from './js/rendering-movie-cards';\nimport * as searchByKeyword from './js/search-by-keyword';\nimport * as openModal from './js/open-and-close-modal';\nimport * as teamModal from './js/team-load-to-modal';\nimport * as galleryMarkup from './js/create-gallery-markup';\n","//-----------------------------HORYZONTAL-INDICATOR-----------------------------//\n\nwindow.onscroll = function () { myFunction() };\n\nfunction myFunction() {\n    var winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n    var height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n    var scrolled = (winScroll / height) * 100;\n    document.getElementById(\"myBar\").style.width = scrolled + \"%\";\n}\n\n//-----------------------------HORYZONTAL-INDICATOR-----------------------------//","// РЕКОМЕНДАЦІЇ\n// 1. Створити та експортувати функцію яка перебирає фільми та повертає розмітку.\n\n// ТУТ ПРАЦЮЄ ОЛЕКСАНДР ХИМЕНКО\n\nimport { fetchGenres } from './api';\nimport { fetchPopularMovies } from './api';\n\nconst NO_POSTER = `https://i.ibb.co/r76r6Vt/oie-30214851-Ms-Wl-PTS0.png`;\nconst moviesEl = document.querySelector('.movies');\n\nexport function getGenres(arrayId, genres) {\n  const arr = [];\n  for (const value of genres) {\n    if (arrayId.includes(value.id)) {\n      arr.push(value.name);\n    }\n  }\n  if (arrayId.length > 2) {\n    arr.splice(2, arr.length - 2, 'Other');\n  }\n\n  return arr.join(', ');\n}\n\nasync function renderGallery(movies) {\n  const genres = await fetchGenres();\n  return movies\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        release_date,\n        genre_ids,\n        original_title,\n        vote_average,\n      } = movies) => {\n        const poster = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : NO_POSTER;\n        const releaseYear = release_date\n          ? release_date.split('-')[0]\n          : 'Unknown';\n        const checkGenres = genre_ids\n          ? getGenres(genre_ids, genres)\n          : 'Unknown';\n        return `\n      <li class='movie_list_item' data-id=\"${id}>\n      <a href=\"\" class='movie_list_link link' id=${id}>\n        <img class=\"movie_list_image\" src=${poster} alt='Poster ${original_title}' loading='lazy' />\n        <div class='movie-info'>\n            <p class='movie-title'>\n              <b>${title.toUpperCase()}</b>\n            </p>\n            <p class='movie-date'>\n              <span>${checkGenres} | ${releaseYear}</span>\n            </p>\n            <div class=\"movie__average\">${vote_average.toFixed(1)}</div>\n        </div>\n        </a>\n      </li>\n      `;\n      }\n    )\n    .join('');\n}\n\nfetchPopularMovies(2)\n  .then(res => {\n    const obj = res.results;\n    return renderGallery(obj);\n  })\n  .then(res => {\n    moviesEl.insertAdjacentHTML('beforeend', res);\n  });\n"],"names":["parcelRequire","window","onscroll","winScroll","height","scrolled","document","body","scrollTop","documentElement","scrollHeight","clientHeight","getElementById","style","width","$bpxeT","$a91d9897a7e75964$var$NO_POSTER","$a91d9897a7e75964$var$moviesEl","querySelector","$a91d9897a7e75964$export$c5604fa8028da00","arrayId","genres","arr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","includes","id","push","name","err","return","length","splice","join","$a91d9897a7e75964$var$_renderGallery","$parcel$interopDefault","$2TvXO","mark","_callee","movies","$b7ONl","fetchGenres","_ctx","sent","map","ref","poster_path","title","release_date","genre_ids","original_title","vote_average","poster","concat","releaseYear","split","checkGenres","toUpperCase","toFixed","apply","this","arguments","fetchPopularMovies","then","res","$a91d9897a7e75964$var$renderGallery","results","insertAdjacentHTML"],"version":3,"file":"index.f94408aa.js.map"}