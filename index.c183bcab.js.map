{"mappings":"iiBAMAA,EAAA,S,WCJAC,OAAOC,SAAW,WAElB,IACQC,EACAC,EACAC,EAFAF,EAAYG,SAASC,KAAKC,WAAaF,SAASG,gBAAgBD,UAChEJ,EAASE,SAASG,gBAAgBC,aAAeJ,SAASG,gBAAgBE,aAC1EN,EAAWF,EAAaC,EAAU,IACtCE,SAASM,eAAe,SAASC,MAAMC,MAAQT,EAAW,G,EAQ9D,IAAIU,EAAyC,IAA1BC,EAAEf,QAAQgB,cAE7BD,EAAEf,QAAQiB,QAAO,WACTF,EAAEV,UAAUE,YAAcO,EAE1BC,EAAE,cAAcG,SAAS,UAIzBH,EAAE,cAAcI,YAAY,S,ICpBpC,IAAAC,EAAArB,EAAA,SCAAsB,EAAAtB,EAAA,S,aAGMuB,G,wBAAa,wDAEZ,SAASC,EAAUC,EAASC,GACjC,IAAMC,EAAM,GACPC,GAAW,EAAXC,GAAW,EAAXC,OAAWC,E,IAAhB,QAAKC,EAAAC,EAAeP,EAAMQ,OAAAC,cAArBP,GAAAI,EAAAC,EAAWG,QAAAC,MAAXT,GAAW,GAAX,IAAMU,EAANN,EAAWM,MACVb,EAAQc,SAASD,EAAME,KACzBb,EAAIc,KAAKH,EAAMI,K,WAFdb,GAAW,EAAXC,EAAWa,C,aAAXf,GAAW,MAAXK,EAAWW,QAAXX,EAAWW,Q,YAAXf,E,MAAAC,C,EASL,OAJIL,EAAQoB,OAAS,GACnBlB,EAAImB,OAAO,EAAGnB,EAAIkB,OAAS,EAAG,SAGzBlB,EAAIoB,KAAK,K,UAGIC,EAAcC,G,OAAdC,EAAaC,MAAAC,KAAAC,U,UAAbH,I,OAAAA,EAAfI,EAAAhC,EAAA,CAAAgC,EAAAC,GAAAC,MAAA,SAAAC,EAA6BR,G,IAC5BvB,E,mFAAe,EAAAL,EAAAqC,e,cAAfhC,EAAMiC,EAAAC,K,kBACLX,EACJY,KACC,W,6DAQIZ,EAPFT,EAAEsB,EAAFtB,GACAuB,EAAWD,EAAXC,YACAC,EAAKF,EAALE,MACAC,EAAYH,EAAZG,aACAC,EAASJ,EAATI,UACAC,EAAcL,EAAdK,eACAC,EAAYN,EAAZM,aAEMC,EAASN,EACX,kCAA8CO,OAAZP,GAClCxC,EACEgD,EAAcN,EAChBA,EAAaO,MAAM,KAAK,GACxB,UACEC,EAAcP,EAChB1C,EAAU0C,EAAWxC,GACrB,UACJ,MAAO,iDAEoC4C,OADN9B,EAAG,0DAGJ8B,OAFO9B,EAAG,mGAEY8B,OAAtBD,EAAO,iBAGhCC,OAH+CH,EAAe,iHAM3DG,OAHHN,EAAMU,cAAc,oFAGAJ,OAAjBG,EAAY,OAEuBH,OAFlBC,EAAY,sFAIjCD,OAFuCK,EAC3CP,GACA,MAA4BE,OAAxBF,EAAaQ,QAAQ,GAAG,4D,IAOrC7B,KAAK,K,2CA3CYG,EAAaC,MAAAC,KAAAC,U,CAuD5B,SAASsB,EAAeE,GAC7B,OAAIA,GAAQ,EACH,QACEA,EAAO,EACT,SAEA,K,CD9EX,IAAMC,EAAWxE,SAASyE,cAAc,YAExC,EAAA1D,EAAA2D,oBAAmB,GAChBC,MAAK,SAAAC,GAEJ,OAAOlC,EADKkC,EAAIC,Q,IAGjBF,MAAK,SAAAC,GACJJ,EAASM,mBAAmB,YAAaF,E","sources":["src/index.js","src/js/custom-components.js","src/js/rendering-movie-cards.js","src/js/create-gallery-markup.js"],"sourcesContent":["// Тут будуть імпортуватись:\n// 1. Рендер карток фільму.\n// 2. Пошук по ключовому слову.\n// 3. Відкирття та закриття модалки.\n// 4. Модалка учасників команди.\n\nimport './js/api';\nimport './js/trailer';\nimport * as customComponent from './js/custom-components';\nimport * as renderingMovieCards from './js/rendering-movie-cards';\nimport * as searchByKeyword from './js/search-by-keyword';\nimport * as openModal from './js/open-and-close-modal';\nimport * as teamModal from './js/team-load-to-modal';\nimport * as galleryMarkup from './js/create-gallery-markup';\n","//-----------------------------HORYZONTAL-INDICATOR-----------------------------//\n\nwindow.onscroll = function () { myFunction() };\n\nfunction myFunction() {\n    var winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n    var height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n    var scrolled = (winScroll / height) * 100;\n    document.getElementById(\"myBar\").style.width = scrolled + \"%\";\n}\n\n//-----------------------------HORYZONTAL-INDICATOR-----------------------------//\n\n//--------------------------------CUSTOM-ANCHOR---------------------------------//\n\n//Make sure the user has scrolled at least double the height of the browser\nvar toggleHeight = $(window).outerHeight() * 1.2;\n\n$(window).scroll(function () {\n    if ($(document).scrollTop() > toggleHeight) {\n        //Adds active class to make button visible\n        $(\"#up-button\").addClass(\"active\");\n\n    } else {\n        //Removes active class to make button visible\n        $(\"#up-button\").removeClass(\"active\");\n    }\n});\n\n//------------------------------CUSTOM-ANCHOR-END-------------------------------//\n\n\n\n","// РЕКОМЕНДАЦІЇ\n// 1. Отримувати дані про трендові фільми.\n\n// ТУТ ПРАЦЮЄ ОЛЕКСАНДР ГАЙДУК\n\nimport { fetchPopularMovies } from './api';\nimport { renderGallery } from './create-gallery-markup';\nconst moviesEl = document.querySelector('.movies');\n\nfetchPopularMovies(1)\n  .then(res => {\n    const obj = res.results;\n    return renderGallery(obj);\n  })\n  .then(res => {\n    moviesEl.insertAdjacentHTML('beforeend', res);\n  });\n","// РЕКОМЕНДАЦІЇ\n// 1. Створити та експортувати функцію яка перебирає фільми та повертає розмітку.\n\n// ТУТ ПРАЦЮЄ ОЛЕКСАНДР ХИМЕНКО\n\nimport { fetchGenres } from './api';\nimport { fetchPopularMovies } from './api';\n\nconst NO_POSTER = `https://i.ibb.co/r76r6Vt/oie-30214851-Ms-Wl-PTS0.png`;\n\nexport function getGenres(arrayId, genres) {\n  const arr = [];\n  for (const value of genres) {\n    if (arrayId.includes(value.id)) {\n      arr.push(value.name);\n    }\n  }\n  if (arrayId.length > 2) {\n    arr.splice(2, arr.length - 2, 'Other');\n  }\n\n  return arr.join(', ');\n}\n\nexport async function renderGallery(movies) {\n  const genres = await fetchGenres();\n  return movies\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        release_date,\n        genre_ids,\n        original_title,\n        vote_average,\n      } = movies) => {\n        const poster = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : NO_POSTER;\n        const releaseYear = release_date\n          ? release_date.split('-')[0]\n          : 'Unknown';\n        const checkGenres = genre_ids\n          ? getGenres(genre_ids, genres)\n          : 'Unknown';\n        return `\n      <li class='movie_list_item' data-id=\"${id}>\n      <a href=\"\" class='movie_list_link link' id=${id}>\n      <div class=\"movie__cover--darkened\"></div>\n        <img class=\"movie_list_image\" src=${poster} alt='Poster ${original_title}' loading='lazy' />\n        <div class='movie-info'>\n            <p class='movie-title'>\n              <b>${title.toUpperCase()}</b>\n            </p>\n            <p class='movie-date'>\n              <span>${checkGenres} | ${releaseYear}</span>\n            </p>\n            <div class=\"movie__average movie__average--${getClassByRate(\n              vote_average\n            )}\">${vote_average.toFixed(1)}</div>\n        </div>\n        </a>\n      </li>\n      `;\n      }\n    )\n    .join('');\n}\n\n// fetchPopularMovies(2)\n//   .then(res => {\n//     const obj = res.results;\n//     return renderGallery(obj);\n//   })\n//   .then(res => {\n//     moviesEl.insertAdjacentHTML('beforeend', res);\n//   });\n\nexport function getClassByRate(vote) {\n  if (vote >= 8) {\n    return 'green';\n  } else if (vote > 6) {\n    return 'orange';\n  } else {\n    return 'red';\n  }\n}\n"],"names":["parcelRequire","window","onscroll","winScroll","height","scrolled","document","body","scrollTop","documentElement","scrollHeight","clientHeight","getElementById","style","width","$e90dac7d96d2e805$var$toggleHeight","$","outerHeight","scroll","addClass","removeClass","$b7ONl","$bpxeT","$a91d9897a7e75964$var$NO_POSTER","$a91d9897a7e75964$export$c5604fa8028da00","arrayId","genres","arr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","includes","id","push","name","err","return","length","splice","join","$a91d9897a7e75964$export$30b0ee8bdb5cac31","movies","$a91d9897a7e75964$var$_renderGallery","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","fetchGenres","_ctx","sent","map","ref","poster_path","title","release_date","genre_ids","original_title","vote_average","poster","concat","releaseYear","split","checkGenres","toUpperCase","$a91d9897a7e75964$export$6d1eedc8c014860a","toFixed","vote","$3e830db53d696c83$var$moviesEl","querySelector","fetchPopularMovies","then","res","results","insertAdjacentHTML"],"version":3,"file":"index.c183bcab.js.map"}