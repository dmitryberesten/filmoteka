{"mappings":"AAWiCA,eAAlBC,EAAmBC,GAChC,MAAMC,EAAM,IAAIC,IAAI,oDACpBD,EAAIE,aAAaC,OAAO,UAPV,oCAQdH,EAAIE,aAAaC,OAAO,OAAQJ,GAEhC,MAAMK,QAAiBC,MAAML,GACvBM,QAAaF,EAASG,OAE5B,OADAC,QAAQC,IAAIH,GACLA,C,CA4CaT,eAAPa,IACb,MAAMV,EAAM,IAAIC,IAAI,iDACpBD,EAAIE,aAAaC,OAAO,UA3DV,oCA6Dd,MAAMC,QAAiBC,MAAML,GAE7B,aADmBI,EAASG,QAChBI,M,CA/CdH,QAAQC,IAAIX,EAAmB,ICpB/Bc,OAAOC,SAAW,WAElB,IACQC,EACAC,EACAC,EAFAF,EAAYG,SAASC,KAAKC,WAAaF,SAASG,gBAAgBD,UAChEJ,EAASE,SAASG,gBAAgBC,aAAeJ,SAASG,gBAAgBE,aAC1EN,EAAWF,EAAaC,EAAU,IACtCE,SAASM,eAAe,SAASC,MAAMC,MAAQT,EAAW,G,ECA9D,MACMU,EAAWT,SAASU,cAAc,WAgBxC9B,eAAe+B,EAAcC,GAC3B,MAAMlB,QAAeD,IACrB,OAAOmB,EACJC,KACC,EAACC,GACCA,EAAEC,YACFA,EAAWC,MACXA,EAAKC,aACLA,EAAYC,UACZA,EAASC,eACTA,EAAcC,aACdA,GACER,KACF,MAAMS,EAASN,EACX,kCAAkCA,IA/B5B,uDAiCJO,EAAcL,EAChBA,EAAaM,MAAM,KAAK,GACxB,UACEC,EAAcN,EAjCrB,SAAmBO,EAAS/B,GACjC,MAAMgC,EAAM,GACZ,IAAK,MAAMC,KAASjC,EACd+B,EAAQG,SAASD,EAAMb,KACzBY,EAAIG,KAAKF,EAAMG,MAOnB,OAJIL,EAAQM,OAAS,GACnBL,EAAIM,OAAO,EAAGN,EAAIK,OAAS,EAAG,SAGzBL,EAAIO,KAAK,K,CAuBNC,CAAUhB,EAAWxB,GACrB,UACJ,MAAO,gDAC8BoB,wDACMA,mGAEPO,iBAAsBF,iHAG/CH,EAAMmB,gGAGHX,OAAiBF,sFAuBfc,EApBVhB,EAqBRgB,GAAQ,EACH,QACEA,EAAO,EACT,SAEA,UAzBOhB,EAAaiB,QAAQ,8DAmBvC,IAAwBD,CAfjB,IAGFH,KAAK,G,CAGVpD,EAAmB,GAChByD,MAAKC,GAEG5B,EADK4B,EAAIC,WAGjBF,MAAKC,IACJ9B,EAASgC,mBAAmB,YAAaF,EAAI","sources":["src/js/api.js","src/js/custom-components.js","src/js/create-gallery-markup.js"],"sourcesContent":["let page;\nlet query;\n\n//основа для запиту\nconst BASE_URL = 'https://api.themoviedb.org/3';\n//персональний ключ\nconst API_KEY = 'db5c04dbd9637821020050cea594d5e0';\n// const WATCH_KEY = 'watched';\n// const QUEUE_KEY = 'queue';\n\n//запит на отримання популярних фільмів\nasync function fetchPopularMovies(page) {\n  const url = new URL(`${BASE_URL}/trending/movie/week`);\n  url.searchParams.append('api_key', API_KEY);\n  url.searchParams.append('page', page);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  console.log(data);\n  return data;\n}\n// `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=${page}&adult=false`;\nconsole.log(fetchPopularMovies(3));\n\n//запит на отримання фільмів по запиту\nasync function fetchMoviesByQuery(query, page) {\n  const url = new URL(`${BASE_URL}/search/movie`);\n  url.searchParams.append('api_key', API_KEY);\n  url.searchParams.append('query', query);\n  url.searchParams.append('page', page);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n// `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&adult=false&query=${query}`;\n// console.log(fetchMoviesByQuery('avengers', 1));\n\n//запит на отримання фільму по id\nasync function fetchMovieById(id) {\n  const url = new URL(`${BASE_URL}/movie/${id}`);\n  url.searchParams.append('api_key', API_KEY);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n// `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n// console.log(fetchMovieById(299534));\n\n//запит на отримання трейлера по id\nasync function fetchTrailerById(id) {\n  const url = new URL(`${BASE_URL}/movie/${id}/videos`);\n  url.searchParams.append('api_key', API_KEY);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n// `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}`;\n// console.log(fetchTrailerById(299534));\n\n//запит на отримання жанрів\nasync function fetchGenres() {\n  const url = new URL(`${BASE_URL}/genre/movie/list`);\n  url.searchParams.append('api_key', API_KEY);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.genres;\n}\n\n// `${BASE_URL}/genre/movie/list?api_key=${API_KEY}`;\n// console.log(fetchGenres());\n\n//Експорт запитів\nexport {\n  fetchPopularMovies,\n  fetchMoviesByQuery,\n  fetchMovieById,\n  fetchTrailerById,\n  fetchGenres,\n  BASE_URL,\n  API_KEY,\n};\n\n// РЕКОМЕНДАЦІЇ\n// 1. Імпортувати axios.\n// 2. Зберегти в змінних ключ та URL.\n// 3. Створити та експортувати асинхронні запити по:\n// трендах, ключовому слові, інфо фільму, інфо відео, масив фільмів.\n\n","//-----------------------------HORYZONTAL-INDICATOR-----------------------------//\n\nwindow.onscroll = function () { myFunction() };\n\nfunction myFunction() {\n    var winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n    var height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n    var scrolled = (winScroll / height) * 100;\n    document.getElementById(\"myBar\").style.width = scrolled + \"%\";\n}\n\n//-----------------------------HORYZONTAL-INDICATOR-----------------------------//","// РЕКОМЕНДАЦІЇ\n// 1. Створити та експортувати функцію яка перебирає фільми та повертає розмітку.\n\n// ТУТ ПРАЦЮЄ ОЛЕКСАНДР ХИМЕНКО\n\nimport { fetchGenres } from './api';\nimport { fetchPopularMovies } from './api';\n\nconst NO_POSTER = `https://i.ibb.co/r76r6Vt/oie-30214851-Ms-Wl-PTS0.png`;\nconst moviesEl = document.querySelector('.movies');\n\nexport function getGenres(arrayId, genres) {\n  const arr = [];\n  for (const value of genres) {\n    if (arrayId.includes(value.id)) {\n      arr.push(value.name);\n    }\n  }\n  if (arrayId.length > 2) {\n    arr.splice(2, arr.length - 2, 'Other');\n  }\n\n  return arr.join(', ');\n}\n\nasync function renderGallery(movies) {\n  const genres = await fetchGenres();\n  return movies\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        release_date,\n        genre_ids,\n        original_title,\n        vote_average,\n      } = movies) => {\n        const poster = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : NO_POSTER;\n        const releaseYear = release_date\n          ? release_date.split('-')[0]\n          : 'Unknown';\n        const checkGenres = genre_ids\n          ? getGenres(genre_ids, genres)\n          : 'Unknown';\n        return `\n      <li class='movie_list_item' data-id=\"${id}>\n      <a href=\"\" class='movie_list_link link' id=${id}>\n      <div class=\"movie__cover--darkened\"></div>\n        <img class=\"movie_list_image\" src=${poster} alt='Poster ${original_title}' loading='lazy' />\n        <div class='movie-info'>\n            <p class='movie-title'>\n              <b>${title.toUpperCase()}</b>\n            </p>\n            <p class='movie-date'>\n              <span>${checkGenres} | ${releaseYear}</span>\n            </p>\n            <div class=\"movie__average movie__average--${getClassByRate(\n              vote_average\n            )}\">${vote_average.toFixed(1)}</div>\n        </div>\n        </a>\n      </li>\n      `;\n      }\n    )\n    .join('');\n}\n\nfetchPopularMovies(2)\n  .then(res => {\n    const obj = res.results;\n    return renderGallery(obj);\n  })\n  .then(res => {\n    moviesEl.insertAdjacentHTML('beforeend', res);\n  });\n\nfunction getClassByRate(vote) {\n  if (vote >= 8) {\n    return 'green';\n  } else if (vote > 6) {\n    return 'orange';\n  } else {\n    return 'red';\n  }\n}\n"],"names":["async","$56ca17bb174b0ce3$export$225b489b0d997c20","page1","url","URL","searchParams","append","response","fetch","data","json","console","log","$56ca17bb174b0ce3$export$e95d448b93b2cdb","genres","window","onscroll","winScroll","height","scrolled","document","body","scrollTop","documentElement","scrollHeight","clientHeight","getElementById","style","width","$ff4f21f9e88c18ff$var$moviesEl","querySelector","$ff4f21f9e88c18ff$var$renderGallery","movies","map","id","poster_path","title","release_date","genre_ids","original_title","vote_average","poster","releaseYear","split","checkGenres","arrayId","arr","value","includes","push","name","length","splice","join","$ff4f21f9e88c18ff$export$c5604fa8028da00","toUpperCase","vote","toFixed","then","res","results","insertAdjacentHTML"],"version":3,"file":"index.2aeed99e.js.map"}