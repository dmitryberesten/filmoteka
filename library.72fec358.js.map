{"mappings":"oeAAAA,EAAA,S,uDCAA,IAAAC,EAAAD,EAAA,S,0BAwCA,SAASE,EAAiBC,GACxB,OAAOA,EACJC,KACC,EAACC,GACCA,EAAEC,YACFA,EAAWC,MACXA,EAAKC,aACLA,EAAYC,UACZA,EAASC,eACTA,EAAcC,aACdA,EAAYC,WACZA,EAAUC,WACVA,EAAUC,SACVA,GACEX,KACF,MAAMY,EAAST,EACX,kCAAkCA,IAClCU,UACEC,EAAcT,EAChBA,EAAaU,MAAM,KAAK,GACxB,UACJ,MAAO,gDAC8Bb,4DACQA,mEAElCA,iCACSU,2BACNR,oCACSG,kCACFC,gCACFC,gCACAC,+BACDJ,8BACDK,gEAEmBC,iBAAsBL,iHAG/CH,EAAMY,gGAGHV,OAAeQ,uFAEoB,EAAAhB,EAAAmB,gBAC3CT,OACIU,OAAOV,GAAcW,QAAQ,+DAIxC,IAGFC,KAAK,G,yBDnFVC,OAAOC,iBAAiB,QCLc,KACpC,MAAMC,GAAO,EAAAC,EAAAC,gBAAeD,EAAAE,iBAAiBC,SAE7C,IAAIC,EAEFA,OADWC,IAATN,GAAsC,IAAhBA,EAAKO,OAFf,iEAKL/B,EAAiBwB,GAE5BQ,EAAAC,KAAKC,UAAUC,mBAAmB,YAAaN,EAAO,IDHxDG,EAAAC,KAAKG,qBAAqBb,iBACxB,SCI4Bc,IAC5B,GAA4B,WAAxBA,EAAIC,OAAOC,SAAuB,OACtC,GAAIF,EAAIC,OAAOE,UAAUC,SAAS,UAAW,OAC7C,MAAMC,EAAYC,SAASC,cAAc,WACzC,IAAIC,EAAMR,EAAIC,OAAOQ,QAAQC,MAAM9B,cAEnC,MAAMO,GAAO,EAAAC,EAAAC,gBAAeD,EAAAE,iBAAiBkB,IACvCG,EACuC,YAA3CX,EAAIC,OAAOQ,QAAQC,MAAM9B,cACrB,iEACA,0GAEN,IAAIY,EAEFA,OADWC,IAATN,GAAsC,IAAhBA,EAAKO,OACpBiB,EAEAhD,EAAiBwB,GAG5BQ,EAAAC,KAAKC,UAAUe,UAAY,GAC3BjB,EAAAC,KAAKC,UAAUC,mBAAmB,YAAaN,GAC/Ca,EAAUF,UAAUU,OAAO,UAC3Bb,EAAIC,OAAOE,UAAUW,IAAI,SAAS","sources":["src/library.js","src/js/render-from-storage.js"],"sourcesContent":["import { page } from './js/api';\nimport './js/api';\nimport './js/sound';\nimport * as customComponent from './js/custom-components';\nimport './js/trailer';\nimport './js/loader';\nimport * as renderingFromStorage from './js/render-from-storage';\nimport * as openModal from './js/open-and-close-modal';\nimport { refs } from './js/refs';\nwindow.addEventListener('load', renderingFromStorage.loadFromStorageWatched);\nrefs.watchedQueueBtnBlock.addEventListener(\n  'click',\n  renderingFromStorage.onClickWatched\n);\n","import { getClassByRate } from './create-gallery-markup';\nimport { getFromStorage, localStorageKeys } from './local-storage';\nimport { refs } from './refs';\n\nexport const loadFromStorageWatched = () => {\n  const data = getFromStorage(localStorageKeys.WATCHED);\n  const warning = `<li class=\"watched-warning\">Please add your favorite film</li>`;\n  let markup;\n  if (data === undefined || data.length === 0) {\n    markup = warning;\n  } else {\n    markup = renderMoviesList(data);\n  }\n  refs.moviesLib.insertAdjacentHTML('beforeend', markup);\n};\nexport const onClickWatched = evt => {\n  if (evt.target.nodeName !== 'BUTTON') return;\n  if (evt.target.classList.contains('active')) return;\n  const activeBtn = document.querySelector('.active');\n  let key = evt.target.dataset.value.toUpperCase();\n\n  const data = getFromStorage(localStorageKeys[key]);\n  const warning =\n    evt.target.dataset.value.toUpperCase() === 'WATCHED'\n      ? `<li class=\"watched-warning\">Please add your favorite film</li>`\n      : `<li class=\"watched-warning\">No movies have been added yet. Let's go pick something to your liking</li>`;\n\n  let markup;\n  if (data === undefined || data.length === 0) {\n    markup = warning;\n  } else {\n    markup = renderMoviesList(data);\n  }\n\n  refs.moviesLib.innerHTML = '';\n  refs.moviesLib.insertAdjacentHTML('beforeend', markup);\n  activeBtn.classList.remove('active');\n  evt.target.classList.add('active');\n};\n\nfunction renderMoviesList(movies) {\n  return movies\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        release_date,\n        genre_ids,\n        original_title,\n        vote_average,\n        popularity,\n        vote_count,\n        overview,\n      } = movies) => {\n        const poster = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : NO_POSTER;\n        const releaseYear = release_date\n          ? release_date.split('-')[0]\n          : 'Unknown';\n        return `\n      <li class='movie_list_item' data-id=\"${id}\" >\n      <div href=\"\" class='movie_list_link link' id=${id}>\n      <div class=\"movie__cover--darkened\"\n        data-id=\"${id}\"\n        data-poster_path=\"${poster}\"\n        data-title=\"${title}\"\n        data-original_title=\"${original_title}\"\n        data-vote_average=\"${vote_average}\"\n        data-popularity=\"${popularity}\"\n        data-vote_count=\"${vote_count}\"\n        data-genre_ids=\"${genre_ids}\"\n        data-overview=\"${overview}\"\n      ></div>\n        <img class=\"movie_list_image\" src=${poster} alt='Poster ${original_title}' loading='lazy' />\n        <div class='movie-info'>\n            <p class='movie-title'>\n              <b>${title.toUpperCase()}</b>\n            </p>\n            <p class='movie-date'>\n              <span>${genre_ids} | ${releaseYear}</span>\n            </p>\n            <div class=\"movie__average movie__average--${getClassByRate(\n              vote_average\n            )}\">${Number(vote_average).toFixed(1)}</div>\n        </div>\n        </div>\n      </li>\n      `;\n      }\n    )\n    .join('');\n}\n"],"names":["parcelRequire","$lV0gX","$37f3f6f151502025$var$renderMoviesList","movies","map","id","poster_path","title","release_date","genre_ids","original_title","vote_average","popularity","vote_count","overview","poster","NO_POSTER","releaseYear","split","toUpperCase","getClassByRate","Number","toFixed","join","window","addEventListener","data","$b5rV1","getFromStorage","localStorageKeys","WATCHED","markup","undefined","length","$krGWQ","refs","moviesLib","insertAdjacentHTML","watchedQueueBtnBlock","evt","target","nodeName","classList","contains","activeBtn","document","querySelector","key","dataset","value","warning","innerHTML","remove","add"],"version":3,"file":"library.72fec358.js.map"}